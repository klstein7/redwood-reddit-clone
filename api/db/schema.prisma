datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
  previewFeatures = ["selectRelationCount"]
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// to create migrations for them and apply to your dev DB.
// TODO: Please remove the following example:
model User {
  id    String     @id @default(uuid())
  email String
  name  String?
  posts Post[]
  likes Like[]
  dislikes Dislike[]
  comments Comment[]
}

model Post {
  id  String  @id @default(uuid())
  title String
  url String?
  body String?
  createdAt DateTime @default(now())
  user User @relation(fields: [userId], references: [id])
  userId String
  likes Like[]
  dislikes Dislike[]
  comments Comment[]
}

model Like {
  id String @id @default(uuid())
  post Post @relation(fields: [postId], references: [id])
  postId String
  user User @relation(fields: [userId], references: [id])
  userId String
  createdAt DateTime @default(now())
}

model Dislike {
  id String @id @default(uuid())
  post Post @relation(fields: [postId], references: [id])
  postId String
  user User @relation(fields: [userId], references: [id])
  userId String
  createdAt DateTime @default(now())
}

model Comment {
  id String @id @default(uuid())
  body String
  post Post @relation(fields: [postId], references: [id])
  postId String
  user User @relation(fields: [userId], references: [id])
  userId String
  parent Comment? @relation("CommentReplies", fields: [parentId], references: [id])
  parentId String?
  comments Comment[] @relation("CommentReplies")
  createdAt DateTime @default(now())
}
